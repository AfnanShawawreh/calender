{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Date","date","setDate","numberDay","getDay","numberMonth","getMonth","monthOfyearkAsString","className","onChange","value","tileDisabled","activeStartDate","view","minDate","tileContent","tileClassName","getDate","discrbtion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA0GeA,G,MAtGH,WAAO,IAAD,EACQC,mBAAS,IAAIC,MADrB,mBACTC,EADS,KACHC,EADG,KAMdC,EAAYF,EAAKG,SAmCjBC,EAAaJ,EAAKK,WAClBC,EAAqB,SAACF,GAC1B,MAAO,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAAYA,IA0BhI,OACE,gCACA,sBAAMG,UAAU,OAAhB,UACA,cAAC,IAAD,CACCC,SAvEc,SAAAR,GACfC,EAASD,IAuETS,MAAOT,EACPU,aAAc,cAAEC,gBAAF,IAAkBX,EAAlB,EAAkBA,KAAlB,EAAuBY,KAAvB,OAA+C,IAAhBZ,EAAKG,UAAgC,IAAlBH,EAAKG,UACpEU,QAAU,IAAId,KACde,YAjCa,SAAC,GAAkB,IAAjBd,EAAgB,EAAhBA,KAAgB,EAAVY,KACxB,OAAqB,IAAlBZ,EAAKG,UAAmBH,EAAM,IAAID,KAC3B,0CAEa,IAAlBC,EAAKG,UAAoC,IAAlBH,EAAKG,UAAmC,IAAlBH,EAAKG,UAAmC,IAAlBH,EAAKG,WAAsBH,EAAM,IAAID,KACnG,6CADV,GA8BGgB,cAvBa,SAAC,GAAoB,IAAlBf,EAAiB,EAAjBA,KAAiB,EAAXY,KACzB,OAAqB,IAAlBZ,EAAKG,UAAkBH,EAAM,IAAID,KAC3B,aAEc,IAAlBC,EAAKG,UAAoC,IAAlBH,EAAKG,UAAmC,IAAlBH,EAAKG,WAAmBH,EAAM,IAAID,KAC1E,aAGW,IAAlBC,EAAKG,UAAmBH,EAAM,IAAID,KAC3B,kBADV,KAmBC,gCAAM,+CACN,iFACA,iFACA,yEACA,uBACA,oCAAO,qBAAKQ,UAAU,eAAtB,wBACA,oCAAO,qBAAKA,UAAU,eAAtB,uBACA,oCAAO,qBAAKA,UAAU,eAAtB,yBACA,oCAAO,qBAAKA,UAAU,cAAtB,2CAMH,oCAhEiB,SAACL,GAChB,GAAe,IAAZA,GAA6B,IAAZA,EACtB,OAAM,gCACN,qBAAKK,UAAW,SAAhB,UAdyB,IAAlBP,EAAKG,UAAoC,IAAlBH,EAAKG,UAAmC,IAAlBH,EAAKG,WAAmBH,EAAM,IAAID,KAC1E,qBAAKQ,UAAU,eAEF,IAAlBP,EAAKG,UAAoBH,EAAM,IAAID,KAC9B,qBAAKQ,UAAU,cAEF,IAAlBP,EAAKG,UAAoBH,EAAM,IAAID,KAC9B,qBAAKQ,UAAU,oBADzB,IAQkD,sBAAKA,UAAW,SAAhB,cAA0B,gCAAO,sBA3B5E,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAAYP,EAAKG,UA2BkD,iBAvBhH,IAAlBH,EAAKG,UAAoC,IAAlBH,EAAKG,UAAmC,IAAlBH,EAAKG,UAAoC,IAAlBH,EAAKG,WAAmBH,EAAM,IAAID,KACjG,SAEa,IAAlBC,EAAKG,UAAoBH,EAAM,IAAID,KAC9B,cADV,GAoBkL,gCAAtG,IAAwIC,EAAKgB,UAAU,IAAKV,EAAqBF,YA6DxPa,CAAWf,WCxFHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1196a490.chunk.js","sourcesContent":["import  React ,{ useState } from 'react';\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css';\n  \nconst App = () => {\n  const [date, setDate] = useState(new Date());\n  const onChange = date => {\n    setDate (date)\n  }\n \nlet numberDay = date.getDay()\nlet dayOfWeekAsString=()=> {\n  return [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"][date.getDay()] ;\n}\n\nconst contantString=()=> {\n  if( (date.getDay() === 3 || date.getDay() === 4|| date.getDay() === 5 || date.getDay() === 6) && date >new Date()){\n    return  '$99.99'\n  }\n  if( (date.getDay() === 2 ) && date >new Date()){\n    return  '$79.99'\n  }\n\n}\nconst boxColor=()=> {\n  if( (date.getDay() === 3 || date.getDay() === 4|| date.getDay() === 5) && date >new Date()){\n    return  <div className=\"rectangle1\"/>\n  }\n  if( (date.getDay() === 6 ) && date >new Date()){\n    return  <div className=\"rectangle\"/>\n  }\n  if( (date.getDay() === 2 ) && date >new Date()){\n    return  <div className=\"rectangle2\"/>\n  }\n \n }\nconst discrbtion=(numberDay)=>{\n  if(numberDay!==0 && numberDay!==1){\nreturn<div>\n<div className= 'inline'>{boxColor(numberDay)}</div><div className= 'inline'> <div>{ ' You have selected '+ dayOfWeekAsString(numberDay)+' Shipping - '  + contantString(numberDay)+' Your package will arrive on '} {date.getDate()+' '+ monthOfyearkAsString(numberMonth) }</div>\n</div> \n</div> \n  }\n}\n \nlet numberMonth= date.getMonth();\nlet monthOfyearkAsString=(numberMonth)=> {\nreturn [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"][numberMonth];}\n let tileContent= ({date, view}) => {\n  if(date.getDay() === 2 && (date >new Date())){\n    return (<div  >$79.99</div>)\n  }\n  if( (date.getDay() === 3 || date.getDay() === 4|| date.getDay() === 5|| date.getDay() === 6  ) && (date >new Date()) ){\n    return (<div>$9.99</div>)\n  }\n \n  \n}\n\nlet tileClassName=({ date, view }) => {\n  if(date.getDay() === 6 && date >new Date() ){\n   return  'highlight'\n  }\n  if( (date.getDay() === 3 || date.getDay() === 4|| date.getDay() === 5) && date >new Date()){\n    return  'highlight1'\n  }\n  \n  if(date.getDay() === 2  && date >new Date()){\n    return  'highlight2'\n  }\n\n}\n\n  return (\n    <div>\n    <div  className='rowC'>\n    <Calendar\n     onChange={onChange} \n    value={date}\n    tileDisabled={({activeStartDate,date,view})=>date.getDay()===0||date.getDay() === 1}\n     minDate= {new Date()}\n     tileContent={tileContent}\n     tileClassName={tileClassName}\n   />\n   \n   \n   <div ><h3>DELIVERY DATE</h3>\n   <div >Select the day you wish to receive your order.</div>\n   <div >Our products ship frozen- please make sure you</div>\n   <div >  plan ahead and save time for thawing</div>\n   <br/>\n   <div > <div className=\"rectangle1\"/>  Standard - $9.99</div>\n   <div > <div className=\"rectangle3\"/> Express - $24.99</div>\n   <div > <div className=\"rectangle2\"/> Overnight - $79.99</div>\n   <div > <div className=\"rectangle\"/> Saturday - $0.00 Upgrade Free*</div>\n \n   \n   </div>\n</div>  \n\n<div> {discrbtion(numberDay)}</div>\n \n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}